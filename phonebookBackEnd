#! /usr/bin/env node

const http = require("http");

const uuidv4 = require("uuid/v4");

const foldCase = require("fold-case");
const root = "/contacts";

let phoneBook = {
    0:{
        id:0,
        name:"áºžerry",
        email:"Terryp@wegrok.net",
        number:"678-383-7780"
    },
    1:{
        id:1,
        name:"Terry",
        email:"Terryp@wegrok.net",
        number:"770-977-3557"
    }
};
let search = (query, target) => {
    let results = [];
    if (!query){
        return target;
    }
    Object.values(target).forEach((entry) => {
        for (let value  of Object.values(entry)){
            if (foldCase(String(value)).includes(foldCase(String(query)))){
                results.push(entry);
                break;
            }
        }
    });
    if (results.length === 1){
        return results[0];
    }
    return results;
};
let newContact = (id=uuidv4(), target, request, response) => {
    let body = "";
    //remove id check and support for setting an id eventually
    if (Object.keys(target).includes(id)){
        response.statusCode = 422;
        response.end("Contact already exists if you want to update a"+
        " contact please use PUT request");
    }

    request.on("data", (partialBody) => {
        body += partialBody;
    });
    request.on("end", () => {
        try{
            console.log(body);
            JSON.parse(body);
        }
        catch (error){
            console.log("caught");
                response.statusCode = 422;
                response.end("Invaild JSON received.");
        }
    });
};
let server = http.createServer((request, response) => {
    const router = {"GET":search,
        "POST":newContact};
    if (request.url.startsWith(root)) {
        let parameter = request.url.replace(root,"").replace("/","");
        parameter = parameter ? parameter : undefined;
        response.end(JSON.stringify(
            router[request.method](parameter, phoneBook, request, response)));
    }
    else {
        response.end("This content is not available in your country");
    }
});
server.listen(3000);
